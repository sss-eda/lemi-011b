name: Docker Build CI

on:
  push:
    branches: [ main ]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare Client
        id: prepClient
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/${GITHUB_REPOSITORY#*/}-client
          VERSION=latest
          SHORTREF=${GITHUB_SHA::8}

          # If this is git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${SHORTREF}"

          # If the VERSION looks like a version number, assume that
          # this is the most recent version of the image and also
          # tag it 'latest'.
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi

          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          
      - name: Prepare Server
        id: prepServer
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/${GITHUB_REPOSITORY#*/}-server
          VERSION=latest
          SHORTREF=${GITHUB_SHA::8}

          # If this is git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${SHORTREF}"

          # If the VERSION looks like a version number, assume that
          # this is the most recent version of the image and also
          # tag it 'latest'.
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi

          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}


      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build Client
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./build/docker/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm32v7
          push: true
          tags: ${{ steps.prepClient.outputs.tags }}
          target: client

      - name: Build Server
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./build/docker/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm32v7
          push: true
          tags: ${{ steps.prepServer.outputs.tags }}
          target: server

# jobs:

#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v2
    
#     - name: Login to DockerHub
#       uses: docker/login-action@v1
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
    
#     - name: Build the Docker image - AMD64
#       run: docker build --build-arg ARCH="amd64" --tag stephanus42/lemi011b-amd64-linux --file build/docker/Dockerfile .
#     - name: Push the Docker image - AMD64
#       run: docker push stephanus42/lemi011b-amd64-linux
      
#     - name: Build the Docker image - ARM32V7
#       run: docker build --build-arg ARCH="arm32v7" --tag stephanus42/lemi011b-arm32v7-linux --file build/docker/Dockerfile .
#     - name: Push the Docker image - ARM32V7
#       run: docker push stephanus42/lemi011b-arm32v7-linux
      
#     - name: Build the Docker image - ARM64
#       run: docker build --build-arg ARCH="arm64" --tag stephanus42/lemi011b-arm64-linux --file build/docker/Dockerfile .
#     - name: Push the Docker image - ARM64
#       run: docker push stephanus42/lemi011b-arm64-linux
      
#     - name: Create Docker manifest
#       run: docker manifest create stephanus42/lemi011b:latest stephanus42/lemi011b-amd64-linux stephanus42/lemi011b-arm32v7-linux stephanus42/lemi011b-arm64-linux
#     - name: Annotate Docker manifest AMD64
#       run: docker manifest annotate --arch amd64 stephanus42/lemi011b:latest stephanus42/lemi011b-amd64-linux
#     - name: Annotate Docker manifest ARM32V7
#       run: docker manifest annotate --arch arm32 --variant v7 stephanus42/lemi011b:latest stephanus42/lemi011b-arm32v7-linux
#     - name: Annotate Docker manifest ARM64
#       run: docker manifest annotate --arch arm64 stephanus42/lemi011b:latest stephanus42/lemi011b-arm64-linux
#     - name: Push Docker manifest
#       run: docker manifest push stephanus42/lemi011b:latest
